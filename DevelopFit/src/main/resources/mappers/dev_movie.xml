<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dev.movie">
	<resultMap id="movieResultMap" type="movieDto">
		<id column="MOVIE_NUMBER" property="movieNumber" />
		<result column="MOVIE_TITLE" property="movieTitle" />
		<result column="MOVIE_SUMMARY" property="movieSummary" />
		<result column="MOVIE_RELEASE_DATE" property="movieReleaseDate" />
		<result column="MOVIE_RUNTIME" property="movieRuntime" />
		<result column="MOVIE_PRICE" property="moviePrice" />
		<result column="MOVIE_POSTER" property="moviePoster" />
		<result column="MOVIE_PREVIEW" property="moviePreview" />
		<result column="GENRE_NAME" property="genreName" />
		<result column="GENRE_NUMBER" property="genreNumber" />		
	</resultMap>

	<select id="movieSelectList" parameterType="map" resultMap="movieResultMap">
		SELECT MOVIE.MOVIE_NUMBER, MOVIE.MOVIE_TITLE, MOVIE.MOVIE_SUMMARY, MOVIE.MOVIE_RELEASE_DATE, MOVIE.MOVIE_RUNTIME, MOVIE.MOVIE_PRICE, MOVIE.MOVIE_POSTER, MOVIE.MOVIE_PREVIEW, MOVIE.GENRE_NAME
		FROM(	SELECT ROWNUM AS RNUM, MOVIE.MOVIE_NUMBER, MOVIE.MOVIE_TITLE, MOVIE.MOVIE_SUMMARY, MOVIE.MOVIE_RELEASE_DATE, MOVIE.MOVIE_RUNTIME, MOVIE.MOVIE_PRICE, MOVIE.MOVIE_POSTER, MOVIE.MOVIE_PREVIEW, MOVIE.GENRE_NAME
						FROM(	SELECT M.MOVIE_NUMBER, M.MOVIE_TITLE, M.MOVIE_SUMMARY, M.MOVIE_RELEASE_DATE, M.MOVIE_RUNTIME, M.MOVIE_PRICE, M.MOVIE_POSTER, M.MOVIE_PREVIEW, G.GENRE_NAME
										FROM MOVIE M JOIN GENRE G
										ON M.GENRE_NUMBER = G.GENRE_NUMBER
										ORDER BY MOVIE_NUMBER DESC
									) MOVIE
					) MOVIE
		WHERE MOVIE.RNUM BETWEEN #{start} AND #{end}
	</select>

	<insert id="movieInsertOne" parameterType="movieDto" useGeneratedKeys="true" keyProperty="movieNumber">
		<selectKey keyProperty="movieNumber" resultType="int" order="BEFORE">
			SELECT MOVIE_NUMBER_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO MOVIE
			(MOVIE_NUMBER, MOVIE_TITLE, MOVIE_SUMMARY, MOVIE_RELEASE_DATE, MOVIE_RUNTIME, MOVIE_PRICE, MOVIE_POSTER, MOVIE_PREVIEW, GENRE_NUMBER)
		VALUES(#{movieNumber}, #{movieTitle}, #{movieSummary}, #{movieReleaseDate}, #{movieRuntime}, #{moviePrice}, #{moviePoster}, #{moviePreview}, #{genreNumber})
	</insert>
	
	<select id="movieSelectOne" parameterType="int" resultMap="movieResultMap">
		SELECT M.MOVIE_NUMBER, M.MOVIE_TITLE, M.MOVIE_SUMMARY, M.MOVIE_RELEASE_DATE, M.MOVIE_RUNTIME
						, M.MOVIE_PRICE, M.MOVIE_POSTER, M.MOVIE_PREVIEW, G.GENRE_NAME
		FROM MOVIE M JOIN GENRE G
		ON M.GENRE_NUMBER = G.GENRE_NUMBER
		WHERE MOVIE_NUMBER = #{movieNumber}
	</select>
	
	<update id="movieUpdateOne" parameterType="movieDto">
		UPDATE MOVIE
		<set>
			MOVIE_TITLE = #{movieTitle},
			MOVIE_SUMMARY = #{movieSummary},
			MOVIE_RELEASE_DATE = #{movieReleaseDate},
			MOVIE_RUNTIME = #{movieRuntime},
			MOVIE_PRICE = #{moviePrice},
			MOVIE_POSTER = #{moviePoster},
			MOVIE_PREVIEW = #{moviePreview}
		</set>
		WHERE MOVIE_NUMBER = #{movieNumber}
	</update>
	
	<delete id="movieDeleteOne" parameterType="int">
		DELETE FROM MOVIE
		WHERE MOVIE_NUMBER = #{movieNumber}
	</delete>
	
	<select id="movieSelectTotalCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM MOVIE
	</select>
</mapper>