<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dev.movie">

	<resultMap type="movieDto" id="movieResultMap">
		<id column="MOVIE_NUMBER" property="movieNumber" />
		<result column="MOVIE_TITLE" property="movieTitle" />
		<result column="MOVIE_SUMMARY" property="movieSummary" />
		<result column="MOVIE_RELEASE_DATE" property="movieReleaseDate" />
		<result column="MOVIE_RUNTIME" property="movieRuntime" />
		<result column="MOVIE_PRICE" property="moviePrice" />
		<result column="MOVIE_POSTER" property="moviePoster" />
		<result column="MOVIE_PREVIEW" property="moviePreview" />
		<result column="GENRE_NUMBER" property="genreNumber" />		
	</resultMap>

<!-- 	<select id="memberSelectList" resultMap="memberResultMap"> -->
<!-- 		SELECT MNO, MNAME, EMAIL, CRE_DATE -->
<!-- 		FROM MEMBER -->
<!-- 		ORDER BY MNO DESC -->
<!-- 	</select> -->
	
	<select id="movieSelectList" parameterType="map" resultMap="movieResultMap">
		SELECT m.movie_number 영화번호, m.movie_title 영화제목, m.movie_summary 줄거리, m.movie_release_date 개봉일,
        					m.movie_runtime 상영시간, m.movie_price 가격, m.movie_poster 포스터, m.movie_preview 예고편, g.genre_name 장르명
		FROM MOVIE M JOIN GENRE G
		ON M.GENRE_NUMBER = G.GENRE_NUMBER




<!-- 		SELECT MEMBER.MNO, MNAME, EMAIL, CRE_DATE -->
<!-- 		FROM(	SELECT ROWNUM AS RNUM, M.MNO, M.MNAME, M.EMAIL, M.CRE_DATE -->
<!-- 						FROM ( -->
<!-- 							SELECT MNO, MNAME, EMAIL, CRE_DATE -->
<!-- 							FROM MEMBER -->
<!-- 							ORDER BY CRE_DATE DESC) M -->
<!-- 		) MEMBER -->
<!-- 		WHERE MEMBER.RNUM BETWEEN #{start} AND #{end} -->
	</select>

	<select id="movieExist" parameterType="map" resultMap="movieResultMap">
		SELECT MNAME, EMAIL
		FROM MEMBER
		WHERE EMAIL = #{email} AND PWD = #{pwd}
	</select>
	
	<insert id="movieInsertOne" parameterType="movieDto"
		useGeneratedKeys="true" keyProperty="no">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT MEMBERS_MNO_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBER
			(MNO, EMAIL, PWD, MNAME, CRE_DATE, MOD_DATE)
		VALUES(#{no}, #{email}, #{password}, #{name}, SYSDATE, SYSDATE)
	</insert>
	
	<select id="movieSelectOne" parameterType="int" resultMap="movieResultMap">
		SELECT MNO, MNAME, EMAIL, CRE_DATE
		FROM MEMBER
		WHERE MNO = #{no}
	</select>
	
	<update id="movieUpdateOne" parameterType="movieDto">
		UPDATE MEMBER
		<set>
			<if test="name != ''">MNAME = #{name},</if>
			<if test="email != ''">EMAIL = #{email},</if>
			MOD_DATE = SYSDATE
		</set>
		WHERE MNO = #{no}
	</update>
	
	<delete id="movieDeleteOne" parameterType="int">
		DELETE FROM MEMBER
		WHERE MNO = #{no}
	</delete>
	
	<select id="movieSelectTotalCount" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM MEMBER
	</select>
	
	<insert id="insertFile" parameterType="map">
		INSERT INTO TB_FILE
			(IDX, PARENT_SEQ, ORIGINAL_FILE_NAME, STORED_FILE_NAME
			, FILE_SIZE, CRE_DATE)
		VALUES
			(TB_FILE_IDX_SEQ.NEXTVAL, #{parentSeq}, #{original_file_name},
			#{stored_file_name}, #{file_size}, SYSDATE)
	</insert>
	
	<select id="fileSelectList" parameterType="int" resultType="map">
		SELECT IDX, ORIGINAL_FILE_NAME, STORED_FILE_NAME
			, ROUND(FILE_SIZE/1024, 1) AS FILE_SIZE
		FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</select>
	
	<select id="fileSelectStoredFileName" parameterType="int" resultType="map">
		SELECT IDX, STORED_FILE_NAME
		FROM TB_FILE
		WHERE PARENT_SEQ = #{parentSeq}
	</select>
	
	<delete id="fileDelete" parameterType="int">
		DELETE FROM TB_FILE
		WHERE PARENT_SEQ = #{no}
	</delete>

</mapper>


